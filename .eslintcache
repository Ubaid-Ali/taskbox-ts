[{"/home/john/Documents/GitHub/taskbox-ts/src/index.tsx":"1","/home/john/Documents/GitHub/taskbox-ts/src/reportWebVitals.ts":"2","/home/john/Documents/GitHub/taskbox-ts/src/App.tsx":"3","/home/john/Documents/GitHub/taskbox-ts/src/components/task/Task.stories.tsx":"4","/home/john/Documents/GitHub/taskbox-ts/src/components/task/Task.tsx":"5"},{"size":500,"mtime":1612246581923,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":1612246581923,"results":"8","hashOfConfig":"7"},{"size":217,"mtime":1612250746056,"results":"9","hashOfConfig":"7"},{"size":682,"mtime":1612376531521,"results":"10","hashOfConfig":"7"},{"size":1363,"mtime":1612382446602,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1b1sfr5",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/john/Documents/GitHub/taskbox-ts/src/index.tsx",[],["25","26"],"/home/john/Documents/GitHub/taskbox-ts/src/reportWebVitals.ts",[],"/home/john/Documents/GitHub/taskbox-ts/src/App.tsx",[],"/home/john/Documents/GitHub/taskbox-ts/src/components/task/Task.stories.tsx",["27"],"import React from 'react';\n\nimport Task from './Task';\nimport { propsInterface } from './Task';\n\nexport default {\n  component: Task,\n  title: 'Task',\n};\n\nconst Template = (args: propsInterface) => <Task {...args} />;\n\nexport const Default = (args: propsInterface) => <Task {...args} />;\nDefault.args = {\n  task: {\n    id: '1',\n    title: 'Test Task',\n    state: 'TASK_INBOX',\n    updatedAt: new Date(),\n  },\n};\n\nexport const Pinned = Template.bind<any>({});\nPinned.args = {\n  task: {\n    ...Default.args.task,\n    state: 'TASK_PINNED',\n  },\n};\n\nexport const Archived = Template.bind<any>({});\nArchived.args = {\n  task: {\n    ...Default.args.task,\n    state: 'TASK_ARCHIVED',\n  },\n};",["28","29"],"/home/john/Documents/GitHub/taskbox-ts/src/components/task/Task.tsx",["30"],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":6,"column":1,"nodeType":"37","endLine":9,"endColumn":3},{"ruleId":"31","replacedBy":"38"},{"ruleId":"33","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":43,"column":21,"nodeType":"42","endLine":43,"endColumn":63},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["43"],["44"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]